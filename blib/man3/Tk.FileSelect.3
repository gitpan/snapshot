.rn '' }`
''' $RCSfile$$Revision$$Date$
'''
''' $Log$
'''
.de Sh
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp
.if t .sp .5v
.if n .sp
..
.de Ip
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb
.ft CW
.nf
.ne \\$1
..
.de Ve
.ft R

.fi
..
'''
'''
'''     Set up \*(-- to give an unbreakable dash;
'''     string Tr holds user defined translation string.
'''     Bell System Logo is used as a dummy character.
'''
.tr \(*W-|\(bv\*(Tr
.ie n \{\
.ds -- \(*W-
.ds PI pi
.if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\" diablo 12 pitch
.ds L" ""
.ds R" ""
'''   \*(M", \*(S", \*(N" and \*(T" are the equivalent of
'''   \*(L" and \*(R", except that they are used on ".xx" lines,
'''   such as .IP and .SH, which do another additional levels of
'''   double-quote interpretation
.ds M" """
.ds S" """
.ds N" """""
.ds T" """""
.ds L' '
.ds R' '
.ds M' '
.ds S' '
.ds N' '
.ds T' '
'br\}
.el\{\
.ds -- \(em\|
.tr \*(Tr
.ds L" ``
.ds R" ''
.ds M" ``
.ds S" ''
.ds N" ``
.ds T" ''
.ds L' `
.ds R' '
.ds M' `
.ds S' '
.ds N' `
.ds T' '
.ds PI \(*p
'br\}
.\"	If the F register is turned on, we'll generate
.\"	index entries out stderr for the following things:
.\"		TH	Title 
.\"		SH	Header
.\"		Sh	Subsection 
.\"		Ip	Item
.\"		X<>	Xref  (embedded
.\"	Of course, you have to process the output yourself
.\"	in some meaninful fashion.
.if \nF \{
.de IX
.tm Index:\\$1\t\\n%\t"\\$2"
..
.nr % 0
.rr F
.\}
.TH Tk::FileSelect 3 "Tk402.001" "24/May/97" "perl/Tk Documentation"
.IX Title "Tk::FileSelect 3"
.UC
.IX Name "FileSelect - a widget for choosing files"
.if n .hy 0
.if n .na
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.de CQ          \" put $1 in typewriter font
.ft CW
'if n "\c
'if t \\&\\$1\c
'if n \\&\\$1\c
'if n \&"
\\&\\$2 \\$3 \\$4 \\$5 \\$6 \\$7
'.ft R
..
.\" @(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2
.	\" AM - accent mark definitions
.bd B 3
.	\" fudge factors for nroff and troff
.if n \{\
.	ds #H 0
.	ds #V .8m
.	ds #F .3m
.	ds #[ \f1
.	ds #] \fP
.\}
.if t \{\
.	ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.	ds #V .6m
.	ds #F 0
.	ds #[ \&
.	ds #] \&
.\}
.	\" simple accents for nroff and troff
.if n \{\
.	ds ' \&
.	ds ` \&
.	ds ^ \&
.	ds , \&
.	ds ~ ~
.	ds ? ?
.	ds ! !
.	ds /
.	ds q
.\}
.if t \{\
.	ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.	ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.	ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.	ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.	ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.	ds ? \s-2c\h'-\w'c'u*7/10'\u\h'\*(#H'\zi\d\s+2\h'\w'c'u*8/10'
.	ds ! \s-2\(or\s+2\h'-\w'\(or'u'\v'-.8m'.\v'.8m'
.	ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.	ds q o\h'-\w'o'u*8/10'\s-4\v'.4m'\z\(*i\v'-.4m'\s+4\h'\w'o'u*8/10'
.\}
.	\" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds v \\k:\h'-(\\n(.wu*9/10-\*(#H)'\v'-\*(#V'\*(#[\s-4v\s0\v'\*(#V'\h'|\\n:u'\*(#]
.ds _ \\k:\h'-(\\n(.wu*9/10-\*(#H+(\*(#F*2/3))'\v'-.4m'\z\(hy\v'.4m'\h'|\\n:u'
.ds . \\k:\h'-(\\n(.wu*8/10)'\v'\*(#V*4/10'\z.\v'-\*(#V*4/10'\h'|\\n:u'
.ds 3 \*(#[\v'.2m'\s-2\&3\s0\v'-.2m'\*(#]
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.ds oe o\h'-(\w'o'u*4/10)'e
.ds Oe O\h'-(\w'O'u*4/10)'E
.	\" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.	\" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.	ds : e
.	ds 8 ss
.	ds v \h'-1'\o'\(aa\(ga'
.	ds _ \h'-1'^
.	ds . \h'-1'.
.	ds 3 3
.	ds o a
.	ds d- d\h'-1'\(ga
.	ds D- D\h'-1'\(hy
.	ds th \o'bp'
.	ds Th \o'LP'
.	ds ae ae
.	ds Ae AE
.	ds oe oe
.	ds Oe OE
.\}
.rm #[ #] #H #V #F C
.SH "NAME"
.IX Header "NAME"
FileSelect \- a widget for choosing files
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.PP
.Vb 1
\& use Tk::FileSelect;
.Ve
.Vb 11
\& $FSref = $top->FileSelect(-directory => $start_dir);
\&               $top            - a window reference, e.g. MainWindow->new
\&               $start_dir      - the starting point for the FileSelect
\& $file = $FSref->Show;
\&               Executes the fileselector until either a filename is
\&               accepted or the user hits Cancel. Returns the filename
\&               or the empty string, respectively, and unmaps the
\&               FileSelect.
\& $FSref->configure(option => value[, ...])
\&               Please see the Populate subroutine as the configuration
\&               list changes rapidly.
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
.PP
.Vb 4
\&   This Module pops up a Fileselector box, with a directory entry on
\&   top, a list of directories in the current directory, a list of
\&   files in the current directory, an entry for entering/modifying a
\&   file name, an accept button and a cancel button.
.Ve
.Vb 11
\&   You can enter a starting directory in the directory entry. After
\&   hitting Return, the listboxes get updated. Double clicking on any
\&   directory shows you the respective contents. Single clicking on a
\&   file brings it into the file entry for further consideration,
\&   double clocking on a file pops down the file selector and calls
\&   the optional command with the complete path for the selected file.
\&   Hitting return in the file selector box or pressing the accept
\&   button will also work. *NOTE* the file selector box will only then
\&   get destroyed if the file name is not zero length. If you want
\&   yourself take care of it, change the if(length(.. in sub
\&   accept_file.
.Ve
.SH "AUTHORS"
.IX Header "AUTHORS"
Based on original FileSelect by
Klaus Lichtenwalder, Lichtenwalder@ACM.org, Datapat GmbH, Munich, April 22, 1995 
adapted by  Frederick L. Wagner, derf@ti.com, Texas Instruments Incorporated, Dallas, 21Jun95
.SH "HISTORY"
.IX Header "HISTORY"
.PP
.Vb 7
\& 950621 -- The following changes were made:
\&   1: Rewrote Tk stuff to take advantage of new Compound widget module, so
\&      FileSelect is now composed of 2 LabEntry and 2 ScrlListbox2 
\&      subwidgets.
\&   2: Moved entry labels (from to the left of) to above the entry fields.
\&   3: Caller is now able to control these aspects of widget, in both
\&        FileSelect (new) and configure :
.Ve
.Vb 2
\&        (Please see subroutine Populate for details, as these options 
\&         change rapidly!)
.Ve
.Vb 7
\&   4: I changed from Double-Button-1 to Button-1 in the Files listbox,
\&      to work with multiple mode in addition to browse mode.  I also
\&      made some name changes (LastPath --> saved_path, ...).
\&   5: The show method is not yet updated.  
\&   6: The topLevel stuff is not done yet.  I took it out while I toy with
\&      the idea of FileSelect as a subwidget.  Then the 'normal' topLevel
\&      thing with Buttons along the bottom could be build on top of it. 
.Ve
.Vb 3
\& By request of Henry Katz <katz@fs09.webo.dg.com>, I added the functionality
\& of using the Directory entry as a filter. So, if you want to only see the
\& *.c files, you add a .c (the *'s already there :) and hit return.
.Ve
.Vb 10
\& 95/10/17, SOL, LUCC.  lusol@Lehigh.EDU 
\&   
\&  . Allow either file or directory names to be accepted.
\&  . Require double click to move into a new directory rather than a single 
\&    click.  This allows a single click to select a directory name so it can
\&    be accepted.
\&  . Add -verify list option so that standard Perl file test operators (like
\&    -d and -x) can be specified for further name validation.  The default
\&    value is the special value '!-d' (not a directory), so any name can be
\&    selected as long as it's not a directory - after all, this IS FileSelect!
.Ve
.Vb 1
\&    For example:
.Ve
.Vb 1
\&      $fs->configure(-verify => ['-d', [\e&verify_code, $P1, $P2, ... $Pn]]);
.Ve
.Vb 4
\&    ensures that the selected name is a directory.  Further, if an element of
\&    the list is an array reference, the first element is a code reference to a
\&    subroutine and the remaining optional elements are it's parameters.  The
\&    subroutine is called like this:
.Ve
.Vb 1
\&      &verify_code($cd, $leaf, $P1, $P2, ... $Pn);
.Ve
.Vb 3
\&    where $cd is the current directory, $leaf is a directory or file name, and
\&    $P1 .. $Pn are your optional parameters.  The subroutine should return TRUE
\&    if success or FALSE if failure.
.Ve
.Vb 4
\& 961008 -- derf@ti.com :
\&   By request of Jim Stern <js@world.northgrum.com> and Brad Vance
\&   <bvance@ti.com>, I updated the Accept and Show functions to support 
\&   selection of multiple files.  I also corrected a typo in the -verify code.
.Ve

.rn }` ''
